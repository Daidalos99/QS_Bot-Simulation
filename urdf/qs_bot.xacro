<?xml version="1.0" ?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="qs_bot">

  <!-- colors -->
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="green">
    <color rgba="0 1 0 1"/>
  </material>

  <xacro:macro name="Transmission_block" params="joint_name">
    <transmission name="${joint_name}_trans">
    <type>transmission_interface/SimpleTransmission</type>
      <joint name="${joint_name}">
        <hardwareInterface>PositionJointInterface</hardwareInterface>
      </joint>
    <actuator name="${joint_name}_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    </transmission>
  </xacro:macro>

  <!-- xacro parameters -->
  <xacro:property name="joint_wheel_match" value="-0.053 0.02 -0.052" />
  <xacro:property name="center_to_left_dis" value="0.2175" />
  <xacro:property name="center_to_right_dis" value="-${center_to_left_dis}" />
  <xacro:property name="center_to_front_dis" value="0.176" />
  <xacro:property name="center_to_back_dis" value="-0.169" />
  <xacro:property name="wheel_mass" value="0.8" />
  <xacro:property name="wheel_height" value="-0.085" />
  <!-- <xacro:property name="wheel_width" value="0.03552" /> -->
  <xacro:property name="wheel_width" value="0.046" />
  <xacro:property name="wheel_radius" value="0.0762" />
  <xacro:property name="PI" value="3.1415926535" />
  <xacro:macro name="cylinder_inertia" params ="m r h">
    <inertial>
      <mass value="${m}"/>
        <inertia ixx="${m*(3*r*r+h*h)/12}"  ixy="0.0" ixz="0.0"
            iyy="${m*(3*r*r+h*h)/12}"  iyz= "0.0"
            izz="${m*r*r/2}"/>
        </inertial>
  </xacro:macro>
  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
        <!-- <inertia ixx="0.033034844532" ixy="-0.000000003511" ixz="0.00039886535"
                 iyy="0.038536631314" iyz="0.000028117499" izz="0.049732878241"/> -->
        <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="omni_steering" params="">
    <gazebo>
      <plugin name="object_controller" filename="libqs_bot_planar_move.so">
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <odometryRate>50.0</odometryRate>
        <robotBaseFrame>base_link</robotBaseFrame>
        <publishTf>true</publishTf>
      </plugin>
      <!-- <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so"/> -->
    </gazebo>
  </xacro:macro>

  <!-- base link -->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="-0.2476 -0.2193 -0.12"/>
      <geometry>
        <mesh filename="package://qs_bot/meshes/base_frame.STL" scale="0.001 0.001 0.001"/>
        <!-- <box size="0.48 0.48 0.225"/> -->
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <!-- <mesh filename="package://qs_bot/meshes/base_frame.STL" scale="0.001 0.001 0.001"/> -->
        <box size="0.48 0.48 0.225"/>
      </geometry>
    </collision>
    <xacro:default_inertial mass="13.617"/>
  </link>

  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <xacro:macro name="wheel" params= "prefix suffix X Y Z">
    <link name= "${prefix}_${suffix}_wheel">
      <visual>
        <origin rpy= "${PI/2} 0 0" xyz= "${joint_wheel_match}"/>
        <geometry>
          <mesh filename="package://qs_bot/meshes/mecanum_wheel.STL" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name= "black"/>
      </visual>
      <collision>
        <origin rpy= "${PI/2} 0 0" xyz= "${joint_wheel_match}"/>
        <geometry>
          <mesh filename="package://qs_bot/meshes/mecanum_wheel.STL" scale="0.001 0.001 0.001"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <gazebo reference ="${prefix}_${suffix}_wheel">
      <mu1>1.0</mu1>
      <mu2>1.0</mu2>
      <kp>10000000.0</kp>
      <kd>1.0</kd>
      <material>Gazebo/DarkGrey</material>
    </gazebo>

    <joint name="${prefix}_${suffix}_wheel_joint" type="continuous">
      <parent link= "base_link"/>
      <child link= "${prefix}_${suffix}_wheel"/>
      <origin xyz= "${X} ${Y} ${Z}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

    <transmission name="${prefix}_${suffix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_${suffix}_wheel_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_${suffix}_wheel_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
  </xacro:macro>

  <xacro:wheel prefix="right" suffix="front" X="${center_to_front_dis}" Y="${center_to_right_dis}" Z="${wheel_height}"/>
  <xacro:wheel prefix="right" suffix="back" X="${center_to_back_dis}" Y="${center_to_right_dis}" Z="${wheel_height}"/>
  <xacro:wheel prefix="left" suffix="front" X="${center_to_front_dis}" Y="${center_to_left_dis}" Z="${wheel_height}"/>
  <xacro:wheel prefix="left" suffix="back" X="${center_to_back_dis}" Y="${center_to_left_dis}" Z="${wheel_height}"/>
  <xacro:omni_steering/>

  <!-- sensors -->
  <link name="laser_frame">
    <visual>
      <!-- <origin rpy="0 0 -${PI/2}" xyz="-0.0375 0.0375 -0.01"/> -->
      <!-- <origin rpy="0 0 0" xyz="-0.0375 0.0375 -0.01"/> -->
      <geometry>
        <!--mesh filename="package://qs_bot/meshes/LiDAR.STL" scale="0.001 0.001 0.001"/-->
        <cylinder radius="0.05" length="0.04"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.05" length="0.04"/>
      </geometry>
    </collision>
    <!-- <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:inertial_cylinder> -->
  </link>

  <joint name="laser_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <parent link="base_link"/>
    <child link="laser_frame"/>
    <origin rpy="0 0 0" xyz="0 0 0.135"/>
  </joint>

  <sensor name="rplidar" update_rate="20">
    <parent link="laser_frame"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <ray>
      <scan>
        <horizontal samples="360" resolution="2" min_angle="-3.14" max_angle="3.14"/>
      </scan>
    </ray>
  </sensor>

  <gazebo reference="laser_frame">
    <material>Gazebo/Blue</material>
    <turnGravityOff>false</turnGravityOff>
    <sensor name="laser" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>2</resolution>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.5</min>
          <max>9</max>
          <!-- <resolution>0.001</resolution> -->
        </range>
      </ray>
      <!-- <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so"> -->
      <plugin name="gazebo_ros_head_rplidar_controller" filename="libgazebo_ros_laser.so">
        <ros>
          <argument>~/out:=scan</argument>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <!-- <topicName>/scan</topicName> -->
        <frameName>laser_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <link name="imu_link">
    <visual>
      <origin rpy="0 0 -${PI/2}" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.01"/>
      </geometry>
      <material name="green"/>
    </visual>
  </link>
  <joint name="imu_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.007"/>
  </joint>

  <!-- gazebo -->
  <!-- <gazebo>
    <plugin name="gazebo_ros_control" filename= "libgazebo_ros_control.so">
    <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo> -->


</robot>

